package com.lexcurious.ui;

import com.lexcurious.api.LawApiClient;
import com.lexcurious.model.detail.LawDetailWrapper;
import com.lexcurious.model.search.Law;
import com.lexcurious.model.search.LawSearchWrapper;
import com.lexcurious.ui.components.LawListCellRenderer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;

public class MainFrame extends JFrame {
    public JPanel contentPane;
    private JTextField searchTextField;
    private JButton searchButton;
    private JList<Law> resultList;
    private JScrollPane scrollPane;
    private JPanel searchPanel;
    private final LawApiClient lawApiClient;

    public MainFrame() {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();

        setTitle("기묘한 법률 탐색기");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setContentPane(contentPane);
        pack();
        setVisible(true);

        lawApiClient = new LawApiClient();
        resultList.setCellRenderer(new LawListCellRenderer());

        resultList.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) { // 더블클릭 감지
                    int index = resultList.locationToIndex(evt.getPoint());
                    Law selectedLaw = resultList.getModel().getElementAt(index);
                    if (selectedLaw != null) {
                        // 상세 정보 다이얼로그 생성 및 표시
                        try {
                            LawDetailWrapper lawDetail = lawApiClient.getLawDetail(selectedLaw.lawSerialId());
                            LawDetailDialog dialog = new LawDetailDialog(MainFrame.this, selectedLaw, lawDetail);
                            dialog.setVisible(true);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(MainFrame.this, "법률 상세 정보를 불러오는 데 실패했습니다.", "오류", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                        }
                    }
                }
            }
        });

        searchButton.addActionListener(e -> {
            String keyword = searchTextField.getText();
            if (keyword.isEmpty()) {
                JOptionPane.showMessageDialog(this, "검색어를 입력하세요.", "알림", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            try {
                LawSearchWrapper lawSearch = lawApiClient.getLawSearch(keyword);
                DefaultListModel<Law> listModel = new DefaultListModel<>();
                if (lawSearch != null && lawSearch.lawSearch() != null) {
                    for (Law law : lawSearch.lawSearch().laws()) {
                        listModel.addElement(law);
                    }
                }
                resultList.setModel(listModel);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "검색 중 오류가 발생했습니다.", "오류", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        contentPane.setBackground(new Color(-1));
        contentPane.setPreferredSize(new Dimension(800, 600));
        searchPanel = new JPanel();
        searchPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        searchPanel.setBackground(new Color(-1));
        contentPane.add(searchPanel, BorderLayout.NORTH);
        searchTextField = new JTextField();
        searchTextField.setColumns(30);
        searchPanel.add(searchTextField);
        searchButton = new JButton();
        searchButton.setText("검색");
        searchPanel.add(searchButton);
        scrollPane = new JScrollPane();
        contentPane.add(scrollPane, BorderLayout.CENTER);
        resultList = new JList();
        scrollPane.setViewportView(resultList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}